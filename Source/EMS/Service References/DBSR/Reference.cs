//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS.DBSR {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cUnitsInfo", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cUnitsInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float GatheringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkManField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Gathering {
            get {
                return this.GatheringField;
            }
            set {
                if ((this.GatheringField.Equals(value) != true)) {
                    this.GatheringField = value;
                    this.RaisePropertyChanged("Gathering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkMan {
            get {
                return this.LinkManField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkManField, value) != true)) {
                    this.LinkManField = value;
                    this.RaisePropertyChanged("LinkMan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((this.PaymentField.Equals(value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitCode {
            get {
                return this.UnitCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitCodeField, value) != true)) {
                    this.UnitCodeField = value;
                    this.RaisePropertyChanged("UnitCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cStockInfo", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cStockInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float CheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LowerLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProduceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float QtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SalePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UpperLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float AveragePrice {
            get {
                return this.AveragePriceField;
            }
            set {
                if ((this.AveragePriceField.Equals(value) != true)) {
                    this.AveragePriceField = value;
                    this.RaisePropertyChanged("AveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Check {
            get {
                return this.CheckField;
            }
            set {
                if ((this.CheckField.Equals(value) != true)) {
                    this.CheckField = value;
                    this.RaisePropertyChanged("Check");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float LowerLimit {
            get {
                return this.LowerLimitField;
            }
            set {
                if ((this.LowerLimitField.Equals(value) != true)) {
                    this.LowerLimitField = value;
                    this.RaisePropertyChanged("LowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Produce {
            get {
                return this.ProduceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProduceField, value) != true)) {
                    this.ProduceField = value;
                    this.RaisePropertyChanged("Produce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SalePrice {
            get {
                return this.SalePriceField;
            }
            set {
                if ((this.SalePriceField.Equals(value) != true)) {
                    this.SalePriceField = value;
                    this.RaisePropertyChanged("SalePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Standard {
            get {
                return this.StandardField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardField, value) != true)) {
                    this.StandardField = value;
                    this.RaisePropertyChanged("Standard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeCode {
            get {
                return this.TradeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeCodeField, value) != true)) {
                    this.TradeCodeField = value;
                    this.RaisePropertyChanged("TradeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeType {
            get {
                return this.TradeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeTypeField, value) != true)) {
                    this.TradeTypeField = value;
                    this.RaisePropertyChanged("TradeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float UpperLimit {
            get {
                return this.UpperLimitField;
            }
            set {
                if ((this.UpperLimitField.Equals(value) != true)) {
                    this.UpperLimitField = value;
                    this.RaisePropertyChanged("UpperLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cEmployeeInfo", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cEmployeeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dept {
            get {
                return this.DeptField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptField, value) != true)) {
                    this.DeptField = value;
                    this.RaisePropertyChanged("Dept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeCode {
            get {
                return this.EmployeeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCodeField, value) != true)) {
                    this.EmployeeCodeField = value;
                    this.RaisePropertyChanged("EmployeeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cBillInfo", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cBillInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BillDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float FullPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float QtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCode {
            get {
                return this.BillCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCodeField, value) != true)) {
                    this.BillCodeField = value;
                    this.RaisePropertyChanged("BillCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BillDate {
            get {
                return this.BillDateField;
            }
            set {
                if ((this.BillDateField.Equals(value) != true)) {
                    this.BillDateField = value;
                    this.RaisePropertyChanged("BillDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float FullPayment {
            get {
                return this.FullPaymentField;
            }
            set {
                if ((this.FullPaymentField.Equals(value) != true)) {
                    this.FullPaymentField = value;
                    this.RaisePropertyChanged("FullPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleField, value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((this.PaymentField.Equals(value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TSum {
            get {
                return this.TSumField;
            }
            set {
                if ((this.TSumField.Equals(value) != true)) {
                    this.TSumField = value;
                    this.RaisePropertyChanged("TSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeCode {
            get {
                return this.TradeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeCodeField, value) != true)) {
                    this.TradeCodeField = value;
                    this.RaisePropertyChanged("TradeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeUnit {
            get {
                return this.TradeUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeUnitField, value) != true)) {
                    this.TradeUnitField = value;
                    this.RaisePropertyChanged("TradeUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cCurrentAccount", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cCurrentAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AddGatheringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BillDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float FactAddFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float FactReduceGatheringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ReduceGatheringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float AddGathering {
            get {
                return this.AddGatheringField;
            }
            set {
                if ((this.AddGatheringField.Equals(value) != true)) {
                    this.AddGatheringField = value;
                    this.RaisePropertyChanged("AddGathering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCode {
            get {
                return this.BillCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCodeField, value) != true)) {
                    this.BillCodeField = value;
                    this.RaisePropertyChanged("BillCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BillDate {
            get {
                return this.BillDateField;
            }
            set {
                if ((this.BillDateField.Equals(value) != true)) {
                    this.BillDateField = value;
                    this.RaisePropertyChanged("BillDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float FactAddFee {
            get {
                return this.FactAddFeeField;
            }
            set {
                if ((this.FactAddFeeField.Equals(value) != true)) {
                    this.FactAddFeeField = value;
                    this.RaisePropertyChanged("FactAddFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float FactReduceGathering {
            get {
                return this.FactReduceGatheringField;
            }
            set {
                if ((this.FactReduceGatheringField.Equals(value) != true)) {
                    this.FactReduceGatheringField = value;
                    this.RaisePropertyChanged("FactReduceGathering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ReduceGathering {
            get {
                return this.ReduceGatheringField;
            }
            set {
                if ((this.ReduceGatheringField.Equals(value) != true)) {
                    this.ReduceGatheringField = value;
                    this.RaisePropertyChanged("ReduceGathering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cUnits", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cUnits : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Linkman {
            get {
                return this.LinkmanField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkmanField, value) != true)) {
                    this.LinkmanField = value;
                    this.RaisePropertyChanged("Linkman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cPopedom", Namespace="http://schemas.datacontract.org/2004/07/EMSWCF")]
    [System.SerializableAttribute()]
    public partial class cPopedom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Base_InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SystemSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VenditionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Base_Info {
            get {
                return this.Base_InfoField;
            }
            set {
                if ((this.Base_InfoField.Equals(value) != true)) {
                    this.Base_InfoField = value;
                    this.RaisePropertyChanged("Base_Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Storage {
            get {
                return this.StorageField;
            }
            set {
                if ((this.StorageField.Equals(value) != true)) {
                    this.StorageField = value;
                    this.RaisePropertyChanged("Storage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysUser {
            get {
                return this.SysUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SysUserField, value) != true)) {
                    this.SysUserField = value;
                    this.RaisePropertyChanged("SysUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SystemSet {
            get {
                return this.SystemSetField;
            }
            set {
                if ((this.SystemSetField.Equals(value) != true)) {
                    this.SystemSetField = value;
                    this.RaisePropertyChanged("SystemSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Vendition {
            get {
                return this.VenditionField;
            }
            set {
                if ((this.VenditionField.Equals(value) != true)) {
                    this.VenditionField = value;
                    this.RaisePropertyChanged("Vendition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DBSR.IDBService")]
    public interface IDBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddUnits", ReplyAction="http://tempuri.org/IDBService/AddUnitsResponse")]
        int AddUnits(EMS.DBSR.cUnitsInfo units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateUnits", ReplyAction="http://tempuri.org/IDBService/UpdateUnitsResponse")]
        int UpdateUnits(EMS.DBSR.cUnitsInfo units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/DeleteUnits", ReplyAction="http://tempuri.org/IDBService/DeleteUnitsResponse")]
        int DeleteUnits(EMS.DBSR.cUnitsInfo units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindUnitsByUnitCode", ReplyAction="http://tempuri.org/IDBService/FindUnitsByUnitCodeResponse")]
        System.Data.DataSet FindUnitsByUnitCode(EMS.DBSR.cUnitsInfo units, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindUnitsByFullName", ReplyAction="http://tempuri.org/IDBService/FindUnitsByFullNameResponse")]
        System.Data.DataSet FindUnitsByFullName(EMS.DBSR.cUnitsInfo units, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllUnits", ReplyAction="http://tempuri.org/IDBService/GetAllUnitsResponse")]
        System.Data.DataSet GetAllUnits(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddStock", ReplyAction="http://tempuri.org/IDBService/AddStockResponse")]
        int AddStock(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateStock", ReplyAction="http://tempuri.org/IDBService/UpdateStockResponse")]
        int UpdateStock(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/DeleteStock", ReplyAction="http://tempuri.org/IDBService/DeleteStockResponse")]
        int DeleteStock(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindStockByProduce", ReplyAction="http://tempuri.org/IDBService/FindStockByProduceResponse")]
        System.Data.DataSet FindStockByProduce(EMS.DBSR.cStockInfo stock, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindStockByFullName", ReplyAction="http://tempuri.org/IDBService/FindStockByFullNameResponse")]
        System.Data.DataSet FindStockByFullName(EMS.DBSR.cStockInfo stock, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllStock", ReplyAction="http://tempuri.org/IDBService/GetAllStockResponse")]
        System.Data.DataSet GetAllStock(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddEmployee", ReplyAction="http://tempuri.org/IDBService/AddEmployeeResponse")]
        int AddEmployee(EMS.DBSR.cEmployeeInfo employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateEmployee", ReplyAction="http://tempuri.org/IDBService/UpdateEmployeeResponse")]
        int UpdateEmployee(EMS.DBSR.cEmployeeInfo employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/DeleteEmployee", ReplyAction="http://tempuri.org/IDBService/DeleteEmployeeResponse")]
        int DeleteEmployee(EMS.DBSR.cEmployeeInfo employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindEmployeeByDept", ReplyAction="http://tempuri.org/IDBService/FindEmployeeByDeptResponse")]
        System.Data.DataSet FindEmployeeByDept(EMS.DBSR.cEmployeeInfo employee, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindEmployeeByFullName", ReplyAction="http://tempuri.org/IDBService/FindEmployeeByFullNameResponse")]
        System.Data.DataSet FindEmployeeByFullName(EMS.DBSR.cEmployeeInfo employee, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllEmployee", ReplyAction="http://tempuri.org/IDBService/GetAllEmployeeResponse")]
        System.Data.DataSet GetAllEmployee(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllBill", ReplyAction="http://tempuri.org/IDBService/GetAllBillResponse")]
        System.Data.DataSet GetAllBill(string tbName_trueName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddTableMainWarehouse", ReplyAction="http://tempuri.org/IDBService/AddTableMainWarehouseResponse")]
        int AddTableMainWarehouse(EMS.DBSR.cBillInfo billinfo, string AddTableName_trueName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddTableMainSellhouse", ReplyAction="http://tempuri.org/IDBService/AddTableMainSellhouseResponse")]
        int AddTableMainSellhouse(EMS.DBSR.cBillInfo billinfo, string AddTableName_trueName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddTableDetailedWarehouse", ReplyAction="http://tempuri.org/IDBService/AddTableDetailedWarehouseResponse")]
        int AddTableDetailedWarehouse(EMS.DBSR.cBillInfo billinfo, string AddTableName_trueName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateStock_QtyAndAveragerprice", ReplyAction="http://tempuri.org/IDBService/UpdateStock_QtyAndAveragerpriceResponse")]
        int UpdateStock_QtyAndAveragerprice(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateSaleStock_Qty", ReplyAction="http://tempuri.org/IDBService/UpdateSaleStock_QtyResponse")]
        int UpdateSaleStock_Qty(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateStock_Qty", ReplyAction="http://tempuri.org/IDBService/UpdateStock_QtyResponse")]
        int UpdateStock_Qty(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetStockByTrade", ReplyAction="http://tempuri.org/IDBService/GetStockByTradeResponse")]
        System.Data.DataSet GetStockByTrade(EMS.DBSR.cStockInfo stock, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddCurrentAccount", ReplyAction="http://tempuri.org/IDBService/AddCurrentAccountResponse")]
        int AddCurrentAccount(EMS.DBSR.cCurrentAccount currentAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/BuyStockAnalyse", ReplyAction="http://tempuri.org/IDBService/BuyStockAnalyseResponse")]
        System.Data.DataSet BuyStockAnalyse(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/BuyAllStockAnalyse", ReplyAction="http://tempuri.org/IDBService/BuyAllStockAnalyseResponse")]
        System.Data.DataSet BuyAllStockAnalyse(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/BuyStockSumDetailed", ReplyAction="http://tempuri.org/IDBService/BuyStockSumDetailedResponse")]
        System.Data.DataSet BuyStockSumDetailed(EMS.DBSR.cBillInfo billinfo, string tbName, System.DateTime starDateTime, System.DateTime endDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/BuyStockSum", ReplyAction="http://tempuri.org/IDBService/BuyStockSumResponse")]
        System.Data.DataSet BuyStockSum(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SellStockSumDetailed", ReplyAction="http://tempuri.org/IDBService/SellStockSumDetailedResponse")]
        System.Data.DataSet SellStockSumDetailed(EMS.DBSR.cBillInfo billinfo, string tbName, System.DateTime starDateTime, System.DateTime endDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SellStockSum", ReplyAction="http://tempuri.org/IDBService/SellStockSumResponse")]
        System.Data.DataSet SellStockSum(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SellStockStatusSum", ReplyAction="http://tempuri.org/IDBService/SellStockStatusSumResponse")]
        System.Data.DataSet SellStockStatusSum(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SellStockDetailed", ReplyAction="http://tempuri.org/IDBService/SellStockDetailedResponse")]
        System.Data.DataSet SellStockDetailed(string strTradeCode, System.DateTime starDateTime, System.DateTime endDateTime, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SetUnitsList", ReplyAction="http://tempuri.org/IDBService/SetUnitsListResponse")]
        System.Data.DataSet SetUnitsList(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SetHandleList", ReplyAction="http://tempuri.org/IDBService/SetHandleListResponse")]
        System.Data.DataSet SetHandleList(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetTSumDesc", ReplyAction="http://tempuri.org/IDBService/GetTSumDescResponse")]
        System.Data.DataSet GetTSumDesc(string handle, string units, System.DateTime StarDateTime, System.DateTime EndDateTime, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetQtyDesc", ReplyAction="http://tempuri.org/IDBService/GetQtyDescResponse")]
        System.Data.DataSet GetQtyDesc(string handle, string units, System.DateTime StarDateTime, System.DateTime EndDateTime, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetDetailedkByBillCode", ReplyAction="http://tempuri.org/IDBService/GetDetailedkByBillCodeResponse")]
        System.Data.DataSet GetDetailedkByBillCode(string billCode, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetStockByTradeCode", ReplyAction="http://tempuri.org/IDBService/GetStockByTradeCodeResponse")]
        System.Data.DataSet GetStockByTradeCode(string tradeCode, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindSellStock", ReplyAction="http://tempuri.org/IDBService/FindSellStockResponse")]
        System.Data.DataSet FindSellStock(System.DateTime starDataTime, System.DateTime endDataTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/setStockStatus", ReplyAction="http://tempuri.org/IDBService/setStockStatusResponse")]
        System.Data.DataSet setStockStatus(string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetStockLimitByTradeCode", ReplyAction="http://tempuri.org/IDBService/GetStockLimitByTradeCodeResponse")]
        System.Data.DataSet GetStockLimitByTradeCode(string tradeCode, string tbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateStockLimit", ReplyAction="http://tempuri.org/IDBService/UpdateStockLimitResponse")]
        int UpdateStockLimit(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetLowerLimit", ReplyAction="http://tempuri.org/IDBService/GetLowerLimitResponse")]
        System.Data.DataSet GetLowerLimit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUpperLimit", ReplyAction="http://tempuri.org/IDBService/GetUpperLimitResponse")]
        System.Data.DataSet GetUpperLimit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/CheckStock", ReplyAction="http://tempuri.org/IDBService/CheckStockResponse")]
        int CheckStock(EMS.DBSR.cStockInfo stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateSysUnits", ReplyAction="http://tempuri.org/IDBService/UpdateSysUnitsResponse")]
        int UpdateSysUnits(EMS.DBSR.cUnits units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/InsertSysUnits", ReplyAction="http://tempuri.org/IDBService/InsertSysUnitsResponse")]
        int InsertSysUnits(EMS.DBSR.cUnits units);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllUnit", ReplyAction="http://tempuri.org/IDBService/GetAllUnitResponse")]
        System.Data.DataSet GetAllUnit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/BackUp", ReplyAction="http://tempuri.org/IDBService/BackUpResponse")]
        void BackUp(string bakUpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/ReStore", ReplyAction="http://tempuri.org/IDBService/ReStoreResponse")]
        void ReStore(string reStoreName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/ClearTable", ReplyAction="http://tempuri.org/IDBService/ClearTableResponse")]
        void ClearTable(string tbName_true);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/AddSysUser", ReplyAction="http://tempuri.org/IDBService/AddSysUserResponse")]
        void AddSysUser(string userName, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/DeleteSysUser", ReplyAction="http://tempuri.org/IDBService/DeleteSysUserResponse")]
        void DeleteSysUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllUser", ReplyAction="http://tempuri.org/IDBService/GetAllUserResponse")]
        System.Data.DataSet GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindUserName", ReplyAction="http://tempuri.org/IDBService/FindUserNameResponse")]
        bool FindUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/UpdateSysUser", ReplyAction="http://tempuri.org/IDBService/UpdateSysUserResponse")]
        void UpdateSysUser(EMS.DBSR.cPopedom popedom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUnitsList", ReplyAction="http://tempuri.org/IDBService/GetUnitsListResponse")]
        System.Data.DataSet GetUnitsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindCurrentAccountDate", ReplyAction="http://tempuri.org/IDBService/FindCurrentAccountDateResponse")]
        System.Data.DataSet FindCurrentAccountDate(string units, System.DateTime starDateTime, System.DateTime endDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindDetailde", ReplyAction="http://tempuri.org/IDBService/FindDetaildeResponse")]
        System.Data.DataSet FindDetailde(string tb_Detailed_true, string billcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/FindMain", ReplyAction="http://tempuri.org/IDBService/FindMainResponse")]
        System.Data.DataSet FindMain(string tb_Main_true, string billcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/OpenInernet", ReplyAction="http://tempuri.org/IDBService/OpenInernetResponse")]
        void OpenInernet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/Login", ReplyAction="http://tempuri.org/IDBService/LoginResponse")]
        System.Data.DataSet Login(EMS.DBSR.cPopedom popedom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBServiceChannel : EMS.DBSR.IDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBServiceClient : System.ServiceModel.ClientBase<EMS.DBSR.IDBService>, EMS.DBSR.IDBService {
        
        public DBServiceClient() {
        }
        
        public DBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUnits(EMS.DBSR.cUnitsInfo units) {
            return base.Channel.AddUnits(units);
        }
        
        public int UpdateUnits(EMS.DBSR.cUnitsInfo units) {
            return base.Channel.UpdateUnits(units);
        }
        
        public int DeleteUnits(EMS.DBSR.cUnitsInfo units) {
            return base.Channel.DeleteUnits(units);
        }
        
        public System.Data.DataSet FindUnitsByUnitCode(EMS.DBSR.cUnitsInfo units, string tbName) {
            return base.Channel.FindUnitsByUnitCode(units, tbName);
        }
        
        public System.Data.DataSet FindUnitsByFullName(EMS.DBSR.cUnitsInfo units, string tbName) {
            return base.Channel.FindUnitsByFullName(units, tbName);
        }
        
        public System.Data.DataSet GetAllUnits(string tbName) {
            return base.Channel.GetAllUnits(tbName);
        }
        
        public int AddStock(EMS.DBSR.cStockInfo stock) {
            return base.Channel.AddStock(stock);
        }
        
        public int UpdateStock(EMS.DBSR.cStockInfo stock) {
            return base.Channel.UpdateStock(stock);
        }
        
        public int DeleteStock(EMS.DBSR.cStockInfo stock) {
            return base.Channel.DeleteStock(stock);
        }
        
        public System.Data.DataSet FindStockByProduce(EMS.DBSR.cStockInfo stock, string tbName) {
            return base.Channel.FindStockByProduce(stock, tbName);
        }
        
        public System.Data.DataSet FindStockByFullName(EMS.DBSR.cStockInfo stock, string tbName) {
            return base.Channel.FindStockByFullName(stock, tbName);
        }
        
        public System.Data.DataSet GetAllStock(string tbName) {
            return base.Channel.GetAllStock(tbName);
        }
        
        public int AddEmployee(EMS.DBSR.cEmployeeInfo employee) {
            return base.Channel.AddEmployee(employee);
        }
        
        public int UpdateEmployee(EMS.DBSR.cEmployeeInfo employee) {
            return base.Channel.UpdateEmployee(employee);
        }
        
        public int DeleteEmployee(EMS.DBSR.cEmployeeInfo employee) {
            return base.Channel.DeleteEmployee(employee);
        }
        
        public System.Data.DataSet FindEmployeeByDept(EMS.DBSR.cEmployeeInfo employee, string tbName) {
            return base.Channel.FindEmployeeByDept(employee, tbName);
        }
        
        public System.Data.DataSet FindEmployeeByFullName(EMS.DBSR.cEmployeeInfo employee, string tbName) {
            return base.Channel.FindEmployeeByFullName(employee, tbName);
        }
        
        public System.Data.DataSet GetAllEmployee(string tbName) {
            return base.Channel.GetAllEmployee(tbName);
        }
        
        public System.Data.DataSet GetAllBill(string tbName_trueName) {
            return base.Channel.GetAllBill(tbName_trueName);
        }
        
        public int AddTableMainWarehouse(EMS.DBSR.cBillInfo billinfo, string AddTableName_trueName) {
            return base.Channel.AddTableMainWarehouse(billinfo, AddTableName_trueName);
        }
        
        public int AddTableMainSellhouse(EMS.DBSR.cBillInfo billinfo, string AddTableName_trueName) {
            return base.Channel.AddTableMainSellhouse(billinfo, AddTableName_trueName);
        }
        
        public int AddTableDetailedWarehouse(EMS.DBSR.cBillInfo billinfo, string AddTableName_trueName) {
            return base.Channel.AddTableDetailedWarehouse(billinfo, AddTableName_trueName);
        }
        
        public int UpdateStock_QtyAndAveragerprice(EMS.DBSR.cStockInfo stock) {
            return base.Channel.UpdateStock_QtyAndAveragerprice(stock);
        }
        
        public int UpdateSaleStock_Qty(EMS.DBSR.cStockInfo stock) {
            return base.Channel.UpdateSaleStock_Qty(stock);
        }
        
        public int UpdateStock_Qty(EMS.DBSR.cStockInfo stock) {
            return base.Channel.UpdateStock_Qty(stock);
        }
        
        public System.Data.DataSet GetStockByTrade(EMS.DBSR.cStockInfo stock, string tbName) {
            return base.Channel.GetStockByTrade(stock, tbName);
        }
        
        public int AddCurrentAccount(EMS.DBSR.cCurrentAccount currentAccount) {
            return base.Channel.AddCurrentAccount(currentAccount);
        }
        
        public System.Data.DataSet BuyStockAnalyse(string tbName) {
            return base.Channel.BuyStockAnalyse(tbName);
        }
        
        public System.Data.DataSet BuyAllStockAnalyse(string tbName) {
            return base.Channel.BuyAllStockAnalyse(tbName);
        }
        
        public System.Data.DataSet BuyStockSumDetailed(EMS.DBSR.cBillInfo billinfo, string tbName, System.DateTime starDateTime, System.DateTime endDateTime) {
            return base.Channel.BuyStockSumDetailed(billinfo, tbName, starDateTime, endDateTime);
        }
        
        public System.Data.DataSet BuyStockSum(string tbName) {
            return base.Channel.BuyStockSum(tbName);
        }
        
        public System.Data.DataSet SellStockSumDetailed(EMS.DBSR.cBillInfo billinfo, string tbName, System.DateTime starDateTime, System.DateTime endDateTime) {
            return base.Channel.SellStockSumDetailed(billinfo, tbName, starDateTime, endDateTime);
        }
        
        public System.Data.DataSet SellStockSum(string tbName) {
            return base.Channel.SellStockSum(tbName);
        }
        
        public System.Data.DataSet SellStockStatusSum(string tbName) {
            return base.Channel.SellStockStatusSum(tbName);
        }
        
        public System.Data.DataSet SellStockDetailed(string strTradeCode, System.DateTime starDateTime, System.DateTime endDateTime, string tbName) {
            return base.Channel.SellStockDetailed(strTradeCode, starDateTime, endDateTime, tbName);
        }
        
        public System.Data.DataSet SetUnitsList(string tbName) {
            return base.Channel.SetUnitsList(tbName);
        }
        
        public System.Data.DataSet SetHandleList(string tbName) {
            return base.Channel.SetHandleList(tbName);
        }
        
        public System.Data.DataSet GetTSumDesc(string handle, string units, System.DateTime StarDateTime, System.DateTime EndDateTime, string tbName) {
            return base.Channel.GetTSumDesc(handle, units, StarDateTime, EndDateTime, tbName);
        }
        
        public System.Data.DataSet GetQtyDesc(string handle, string units, System.DateTime StarDateTime, System.DateTime EndDateTime, string tbName) {
            return base.Channel.GetQtyDesc(handle, units, StarDateTime, EndDateTime, tbName);
        }
        
        public System.Data.DataSet GetDetailedkByBillCode(string billCode, string tbName) {
            return base.Channel.GetDetailedkByBillCode(billCode, tbName);
        }
        
        public System.Data.DataSet GetStockByTradeCode(string tradeCode, string tbName) {
            return base.Channel.GetStockByTradeCode(tradeCode, tbName);
        }
        
        public System.Data.DataSet FindSellStock(System.DateTime starDataTime, System.DateTime endDataTime) {
            return base.Channel.FindSellStock(starDataTime, endDataTime);
        }
        
        public System.Data.DataSet setStockStatus(string tbName) {
            return base.Channel.setStockStatus(tbName);
        }
        
        public System.Data.DataSet GetStockLimitByTradeCode(string tradeCode, string tbName) {
            return base.Channel.GetStockLimitByTradeCode(tradeCode, tbName);
        }
        
        public int UpdateStockLimit(EMS.DBSR.cStockInfo stock) {
            return base.Channel.UpdateStockLimit(stock);
        }
        
        public System.Data.DataSet GetLowerLimit() {
            return base.Channel.GetLowerLimit();
        }
        
        public System.Data.DataSet GetUpperLimit() {
            return base.Channel.GetUpperLimit();
        }
        
        public int CheckStock(EMS.DBSR.cStockInfo stock) {
            return base.Channel.CheckStock(stock);
        }
        
        public int UpdateSysUnits(EMS.DBSR.cUnits units) {
            return base.Channel.UpdateSysUnits(units);
        }
        
        public int InsertSysUnits(EMS.DBSR.cUnits units) {
            return base.Channel.InsertSysUnits(units);
        }
        
        public System.Data.DataSet GetAllUnit() {
            return base.Channel.GetAllUnit();
        }
        
        public void BackUp(string bakUpName) {
            base.Channel.BackUp(bakUpName);
        }
        
        public void ReStore(string reStoreName) {
            base.Channel.ReStore(reStoreName);
        }
        
        public void ClearTable(string tbName_true) {
            base.Channel.ClearTable(tbName_true);
        }
        
        public void AddSysUser(string userName, string pwd) {
            base.Channel.AddSysUser(userName, pwd);
        }
        
        public void DeleteSysUser(int ID) {
            base.Channel.DeleteSysUser(ID);
        }
        
        public System.Data.DataSet GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public bool FindUserName(string userName) {
            return base.Channel.FindUserName(userName);
        }
        
        public void UpdateSysUser(EMS.DBSR.cPopedom popedom) {
            base.Channel.UpdateSysUser(popedom);
        }
        
        public System.Data.DataSet GetUnitsList() {
            return base.Channel.GetUnitsList();
        }
        
        public System.Data.DataSet FindCurrentAccountDate(string units, System.DateTime starDateTime, System.DateTime endDateTime) {
            return base.Channel.FindCurrentAccountDate(units, starDateTime, endDateTime);
        }
        
        public System.Data.DataSet FindDetailde(string tb_Detailed_true, string billcode) {
            return base.Channel.FindDetailde(tb_Detailed_true, billcode);
        }
        
        public System.Data.DataSet FindMain(string tb_Main_true, string billcode) {
            return base.Channel.FindMain(tb_Main_true, billcode);
        }
        
        public void OpenInernet() {
            base.Channel.OpenInernet();
        }
        
        public System.Data.DataSet Login(EMS.DBSR.cPopedom popedom) {
            return base.Channel.Login(popedom);
        }
    }
}
